// <auto-generated />
using System;
using DashboardService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DashboardService.Infrastructure.Migrations
{
    [DbContext(typeof(DashboardServiceDbContext))]
    partial class DashboardServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Dashboard")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DashboardService.Core.AggregateModel.CardAggregate.Card", b =>
                {
                    b.Property<Guid>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardId");

                    b.ToTable("Cards", "Dashboard");
                });

            modelBuilder.Entity("DashboardService.Core.AggregateModel.CardLayoutAggregate.CardLayout", b =>
                {
                    b.Property<Guid>("CardLayoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardLayoutId");

                    b.ToTable("CardLayouts", "Dashboard");
                });

            modelBuilder.Entity("DashboardService.Core.AggregateModel.DashboardAggregate.Dashboard", b =>
                {
                    b.Property<Guid>("DashboardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DashboardId");

                    b.HasIndex("UserId");

                    b.ToTable("Dashboards", "Dashboard");
                });

            modelBuilder.Entity("DashboardService.Core.AggregateModel.DashboardCardAggregate.DashboardCard", b =>
                {
                    b.Property<Guid>("DashboardCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardLayoutId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DashboardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DashboardCardId");

                    b.HasIndex("CardId");

                    b.HasIndex("CardLayoutId");

                    b.HasIndex("DashboardId");

                    b.ToTable("DashboardCards", "Dashboard");
                });

            modelBuilder.Entity("DashboardService.Core.AggregateModel.UserAggregate.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users", "Dashboard");
                });

            modelBuilder.Entity("DashboardService.Core.AggregateModel.DashboardAggregate.Dashboard", b =>
                {
                    b.HasOne("DashboardService.Core.AggregateModel.UserAggregate.User", null)
                        .WithMany("Dashboards")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DashboardService.Core.AggregateModel.DashboardCardAggregate.DashboardCard", b =>
                {
                    b.HasOne("DashboardService.Core.AggregateModel.CardAggregate.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DashboardService.Core.AggregateModel.CardLayoutAggregate.CardLayout", "CardLayout")
                        .WithMany()
                        .HasForeignKey("CardLayoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DashboardService.Core.AggregateModel.DashboardAggregate.Dashboard", "Dashboard")
                        .WithMany("DashboardCards")
                        .HasForeignKey("DashboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("CardLayout");

                    b.Navigation("Dashboard");
                });

            modelBuilder.Entity("DashboardService.Core.AggregateModel.DashboardAggregate.Dashboard", b =>
                {
                    b.Navigation("DashboardCards");
                });

            modelBuilder.Entity("DashboardService.Core.AggregateModel.UserAggregate.User", b =>
                {
                    b.Navigation("Dashboards");
                });
#pragma warning restore 612, 618
        }
    }
}
